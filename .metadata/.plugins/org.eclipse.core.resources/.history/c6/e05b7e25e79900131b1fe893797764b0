import java.util.ArrayList;

public class Runner {

	public static void main(String[] args) {
		BinaryTree<String, Integer> tree = new BinaryTree<String, Integer>();
		ArrayList<BinaryNode<Integer, Character>> nodes = new ArrayList<BinaryNode<Integer, Character>>();
		
		nodes.add(new BinaryNode<Integer, Character>(50, 'A'));
		nodes.add(new BinaryNode<Integer, Character>(35, 'T'));
		nodes.add(new BinaryNode<Integer, Character>(10, 'C'));
		nodes.add(new BinaryNode<Integer, Character>(5, 'G'));
		
	}
	
	public static BinaryTree<Integer, Character> buildHuffmanTree(ArrayList<BinaryNode<Integer, Character>> ns) {
		ArrayList<BinaryTree<Integer, Character>> parts = new ArrayList<BinaryTree<Integer, Character>>();
		ArrayList<BinaryNode<Integer, Character>> nsCopy = new ArrayList<BinaryNode<Integer, Character>>(ns);
		
	}
}